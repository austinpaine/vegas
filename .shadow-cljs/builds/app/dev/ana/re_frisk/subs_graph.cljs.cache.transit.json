["^ ","~:output",["^ ","~:js","goog.provide('re_frisk.subs_graph');\r\nif((typeof re_frisk !== 'undefined') && (typeof re_frisk.subs_graph !== 'undefined') && (typeof re_frisk.subs_graph.network !== 'undefined')){\r\n} else {\r\nre_frisk.subs_graph.network = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\r\n}\r\nif((typeof re_frisk !== 'undefined') && (typeof re_frisk.subs_graph !== 'undefined') && (typeof re_frisk.subs_graph.vis !== 'undefined')){\r\n} else {\r\nre_frisk.subs_graph.vis = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\r\n}\r\nif((typeof re_frisk !== 'undefined') && (typeof re_frisk.subs_graph !== 'undefined') && (typeof re_frisk.subs_graph.doc !== 'undefined')){\r\n} else {\r\nre_frisk.subs_graph.doc = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\r\n}\r\nif((typeof re_frisk !== 'undefined') && (typeof re_frisk.subs_graph !== 'undefined') && (typeof re_frisk.subs_graph.nodes !== 'undefined')){\r\n} else {\r\nre_frisk.subs_graph.nodes = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\n}\r\nif((typeof re_frisk !== 'undefined') && (typeof re_frisk.subs_graph !== 'undefined') && (typeof re_frisk.subs_graph.edges !== 'undefined')){\r\n} else {\r\nre_frisk.subs_graph.edges = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\n}\r\nif((typeof re_frisk !== 'undefined') && (typeof re_frisk.subs_graph !== 'undefined') && (typeof re_frisk.subs_graph.options !== 'undefined')){\r\n} else {\r\nre_frisk.subs_graph.options = cljs.core.clj__GT_js(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"physics\",\"physics\",-1254209137),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"solver\",\"solver\",-744421825),\"forceAtlas2Based\",new cljs.core.Keyword(null,\"maxVelocity\",\"maxVelocity\",1721643083),(30),new cljs.core.Keyword(null,\"minVelocity\",\"minVelocity\",-32716928),(10),new cljs.core.Keyword(null,\"stabilization\",\"stabilization\",-1209068026),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"iterations\",\"iterations\",-1402710890),(30)], null)], null)], null));\r\n}\r\nre_frisk.subs_graph.init = (function re_frisk$subs_graph$init(win,document){\r\ncljs.core.reset_BANG_(re_frisk.subs_graph.vis,win.vis);\r\n\r\nreturn cljs.core.reset_BANG_(re_frisk.subs_graph.doc,document);\r\n});\r\nre_frisk.subs_graph.set_root_node = (function re_frisk$subs_graph$set_root_node(reaction){\r\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.nodes),reaction))){\r\nreturn null;\r\n} else {\r\nvar data = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction,new cljs.core.Keyword(null,\"label\",\"label\",1718410804),\"app-db\",new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),new cljs.core.Keyword(null,\"yellow\",\"yellow\",-881035449)], null)], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.nodes,cljs.core.assoc,reaction,data);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nreturn new cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).nodes.add(cljs.core.clj__GT_js(data));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\nre_frisk.subs_graph.destroy = (function re_frisk$subs_graph$destroy(){\r\nvar temp__5735__auto__ = new cljs.core.Keyword(null,\"network\",\"network\",2050004697).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network));\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar network_js = temp__5735__auto__;\r\nnetwork_js.destroy();\r\n\r\nreturn cljs.core.reset_BANG_(re_frisk.subs_graph.network,null);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nre_frisk.subs_graph.create = (function re_frisk$subs_graph$create(){\r\nre_frisk.subs_graph.destroy();\r\n\r\nif(cljs.core.truth_((function (){var and__4115__auto__ = cljs.core.deref(re_frisk.subs_graph.vis);\r\nif(cljs.core.truth_(and__4115__auto__)){\r\nreturn cljs.core.deref(re_frisk.subs_graph.doc);\r\n} else {\r\nreturn and__4115__auto__;\r\n}\r\n})())){\r\nvar Network = cljs.core.deref(re_frisk.subs_graph.vis).Network;\r\nvar DataSet = cljs.core.deref(re_frisk.subs_graph.vis).DataSet;\r\nvar nodes_ds = (new DataSet(cljs.core.clj__GT_js(cljs.core.vals(cljs.core.deref(re_frisk.subs_graph.nodes)))));\r\nvar edges_ds = (new DataSet(cljs.core.clj__GT_js(cljs.core.vals(cljs.core.deref(re_frisk.subs_graph.edges)))));\r\nvar data = ({\"nodes\": nodes_ds, \"edges\": edges_ds});\r\nvar temp__5735__auto__ = cljs.core.deref(re_frisk.subs_graph.doc).getElementById(\"global-subs-graph-container\");\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar container = temp__5735__auto__;\r\nreturn cljs.core.reset_BANG_(re_frisk.subs_graph.network,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"data\",\"data\",-232669377),data,new cljs.core.Keyword(null,\"network\",\"network\",2050004697),(new Network(container,data,re_frisk.subs_graph.options))], null));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nre_frisk.subs_graph.update_subs = (function re_frisk$subs_graph$update_subs(traces){\r\nvar temp__5735__auto___56452 = new cljs.core.Keyword(null,\"app-db-reaction\",\"app-db-reaction\",-269835135).cljs$core$IFn$_invoke$arity$1(cljs.core.first(traces));\r\nif(cljs.core.truth_(temp__5735__auto___56452)){\r\nvar app_db_reaction_56453 = temp__5735__auto___56452;\r\nre_frisk.subs_graph.set_root_node(app_db_reaction_56453);\r\n} else {\r\n}\r\n\r\nvar new_nodes = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\r\nvar seq__56120_56454 = cljs.core.seq(traces);\r\nvar chunk__56121_56455 = null;\r\nvar count__56122_56456 = (0);\r\nvar i__56123_56457 = (0);\r\nwhile(true){\r\nif((i__56123_56457 < count__56122_56456)){\r\nvar map__56277_56458 = chunk__56121_56455.cljs$core$IIndexed$_nth$arity$2(null,i__56123_56457);\r\nvar map__56277_56459__$1 = (((((!((map__56277_56458 == null))))?(((((map__56277_56458.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56277_56458.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56277_56458):map__56277_56458);\r\nvar subs_56460 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56277_56459__$1,new cljs.core.Keyword(null,\"subs\",\"subs\",-186681991));\r\nvar seq__56279_56461 = cljs.core.seq(subs_56460);\r\nvar chunk__56280_56462 = null;\r\nvar count__56281_56463 = (0);\r\nvar i__56282_56464 = (0);\r\nwhile(true){\r\nif((i__56282_56464 < count__56281_56463)){\r\nvar map__56319_56465 = chunk__56280_56462.cljs$core$IIndexed$_nth$arity$2(null,i__56282_56464);\r\nvar map__56319_56466__$1 = (((((!((map__56319_56465 == null))))?(((((map__56319_56465.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56319_56465.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56319_56465):map__56319_56465);\r\nvar op_type_56467 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56319_56466__$1,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668));\r\nvar reaction_56468 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56319_56466__$1,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788));\r\nvar input_signals_56469 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56319_56466__$1,new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497));\r\nvar operation_56470 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56319_56466__$1,new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310));\r\nvar temp__5733__auto___56473 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.nodes),reaction_56468);\r\nif(cljs.core.truth_(temp__5733__auto___56473)){\r\nvar old_reaction_56474 = temp__5733__auto___56473;\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(op_type_56467,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(old_reaction_56474))){\r\nvar updated_node_56475 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(old_reaction_56474,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56467,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56467)], null)], 0));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.nodes,cljs.core.assoc,reaction_56468,updated_node_56475);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).nodes.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_node_56475], null)));\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\nvar data_56476 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_56468,new cljs.core.Keyword(null,\"label\",\"label\",1718410804),operation_56470,new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56467)], null),new cljs.core.Keyword(null,\"font\",\"font\",-1506159249),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.Keyword(null,\"white\",\"white\",-483998618)], null),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56467], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.nodes,cljs.core.assoc,reaction_56468,data_56476);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(new_nodes,cljs.core.conj,data_56476);\r\n}\r\n\r\nif(cljs.core.truth_(input_signals_56469)){\r\nvar seq__56321_56479 = cljs.core.seq(input_signals_56469);\r\nvar chunk__56322_56480 = null;\r\nvar count__56323_56481 = (0);\r\nvar i__56324_56482 = (0);\r\nwhile(true){\r\nif((i__56324_56482 < count__56323_56481)){\r\nvar input_reaction_56483 = chunk__56322_56480.cljs$core$IIndexed$_nth$arity$2(null,i__56324_56482);\r\nvar reaction_path_56484 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56483),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56468)].join('');\r\nvar temp__5733__auto___56485 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.edges),reaction_path_56484);\r\nif(cljs.core.truth_(temp__5733__auto___56485)){\r\nvar old_edge_56486 = temp__5733__auto___56485;\r\nvar updated_edge_56487 = cljs.core.update.cljs$core$IFn$_invoke$arity$3(old_edge_56486,new cljs.core.Keyword(null,\"value\",\"value\",305978217),cljs.core.inc);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56484,updated_edge_56487);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_edge_56487], null)));\r\n} else {\r\n}\r\n} else {\r\nvar data_56488 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_path_56484,new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56483,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56468,new cljs.core.Keyword(null,\"value\",\"value\",305978217),(1)], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56484,data_56488);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.add(cljs.core.clj__GT_js(data_56488));\r\n} else {\r\n}\r\n}\r\n\r\n\r\nvar G__56489 = seq__56321_56479;\r\nvar G__56490 = chunk__56322_56480;\r\nvar G__56491 = count__56323_56481;\r\nvar G__56492 = (i__56324_56482 + (1));\r\nseq__56321_56479 = G__56489;\r\nchunk__56322_56480 = G__56490;\r\ncount__56323_56481 = G__56491;\r\ni__56324_56482 = G__56492;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56493 = cljs.core.seq(seq__56321_56479);\r\nif(temp__5735__auto___56493){\r\nvar seq__56321_56495__$1 = temp__5735__auto___56493;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56321_56495__$1)){\r\nvar c__4556__auto___56496 = cljs.core.chunk_first(seq__56321_56495__$1);\r\nvar G__56497 = cljs.core.chunk_rest(seq__56321_56495__$1);\r\nvar G__56498 = c__4556__auto___56496;\r\nvar G__56499 = cljs.core.count(c__4556__auto___56496);\r\nvar G__56500 = (0);\r\nseq__56321_56479 = G__56497;\r\nchunk__56322_56480 = G__56498;\r\ncount__56323_56481 = G__56499;\r\ni__56324_56482 = G__56500;\r\ncontinue;\r\n} else {\r\nvar input_reaction_56502 = cljs.core.first(seq__56321_56495__$1);\r\nvar reaction_path_56503 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56502),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56468)].join('');\r\nvar temp__5733__auto___56504 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.edges),reaction_path_56503);\r\nif(cljs.core.truth_(temp__5733__auto___56504)){\r\nvar old_edge_56505 = temp__5733__auto___56504;\r\nvar updated_edge_56506 = cljs.core.update.cljs$core$IFn$_invoke$arity$3(old_edge_56505,new cljs.core.Keyword(null,\"value\",\"value\",305978217),cljs.core.inc);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56503,updated_edge_56506);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_edge_56506], null)));\r\n} else {\r\n}\r\n} else {\r\nvar data_56507 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_path_56503,new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56502,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56468,new cljs.core.Keyword(null,\"value\",\"value\",305978217),(1)], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56503,data_56507);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.add(cljs.core.clj__GT_js(data_56507));\r\n} else {\r\n}\r\n}\r\n\r\n\r\nvar G__56508 = cljs.core.next(seq__56321_56495__$1);\r\nvar G__56509 = null;\r\nvar G__56510 = (0);\r\nvar G__56511 = (0);\r\nseq__56321_56479 = G__56508;\r\nchunk__56322_56480 = G__56509;\r\ncount__56323_56481 = G__56510;\r\ni__56324_56482 = G__56511;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\n}\r\n\r\n\r\nvar G__56512 = seq__56279_56461;\r\nvar G__56513 = chunk__56280_56462;\r\nvar G__56514 = count__56281_56463;\r\nvar G__56515 = (i__56282_56464 + (1));\r\nseq__56279_56461 = G__56512;\r\nchunk__56280_56462 = G__56513;\r\ncount__56281_56463 = G__56514;\r\ni__56282_56464 = G__56515;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56516 = cljs.core.seq(seq__56279_56461);\r\nif(temp__5735__auto___56516){\r\nvar seq__56279_56517__$1 = temp__5735__auto___56516;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56279_56517__$1)){\r\nvar c__4556__auto___56518 = cljs.core.chunk_first(seq__56279_56517__$1);\r\nvar G__56520 = cljs.core.chunk_rest(seq__56279_56517__$1);\r\nvar G__56521 = c__4556__auto___56518;\r\nvar G__56522 = cljs.core.count(c__4556__auto___56518);\r\nvar G__56523 = (0);\r\nseq__56279_56461 = G__56520;\r\nchunk__56280_56462 = G__56521;\r\ncount__56281_56463 = G__56522;\r\ni__56282_56464 = G__56523;\r\ncontinue;\r\n} else {\r\nvar map__56328_56527 = cljs.core.first(seq__56279_56517__$1);\r\nvar map__56328_56528__$1 = (((((!((map__56328_56527 == null))))?(((((map__56328_56527.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56328_56527.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56328_56527):map__56328_56527);\r\nvar op_type_56529 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56328_56528__$1,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668));\r\nvar reaction_56530 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56328_56528__$1,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788));\r\nvar input_signals_56531 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56328_56528__$1,new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497));\r\nvar operation_56532 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56328_56528__$1,new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310));\r\nvar temp__5733__auto___56534 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.nodes),reaction_56530);\r\nif(cljs.core.truth_(temp__5733__auto___56534)){\r\nvar old_reaction_56535 = temp__5733__auto___56534;\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(op_type_56529,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(old_reaction_56535))){\r\nvar updated_node_56536 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(old_reaction_56535,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56529,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56529)], null)], 0));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.nodes,cljs.core.assoc,reaction_56530,updated_node_56536);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).nodes.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_node_56536], null)));\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\nvar data_56537 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_56530,new cljs.core.Keyword(null,\"label\",\"label\",1718410804),operation_56532,new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56529)], null),new cljs.core.Keyword(null,\"font\",\"font\",-1506159249),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.Keyword(null,\"white\",\"white\",-483998618)], null),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56529], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.nodes,cljs.core.assoc,reaction_56530,data_56537);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(new_nodes,cljs.core.conj,data_56537);\r\n}\r\n\r\nif(cljs.core.truth_(input_signals_56531)){\r\nvar seq__56330_56538 = cljs.core.seq(input_signals_56531);\r\nvar chunk__56331_56539 = null;\r\nvar count__56332_56540 = (0);\r\nvar i__56333_56541 = (0);\r\nwhile(true){\r\nif((i__56333_56541 < count__56332_56540)){\r\nvar input_reaction_56542 = chunk__56331_56539.cljs$core$IIndexed$_nth$arity$2(null,i__56333_56541);\r\nvar reaction_path_56543 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56542),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56530)].join('');\r\nvar temp__5733__auto___56544 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.edges),reaction_path_56543);\r\nif(cljs.core.truth_(temp__5733__auto___56544)){\r\nvar old_edge_56545 = temp__5733__auto___56544;\r\nvar updated_edge_56546 = cljs.core.update.cljs$core$IFn$_invoke$arity$3(old_edge_56545,new cljs.core.Keyword(null,\"value\",\"value\",305978217),cljs.core.inc);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56543,updated_edge_56546);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_edge_56546], null)));\r\n} else {\r\n}\r\n} else {\r\nvar data_56547 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_path_56543,new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56542,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56530,new cljs.core.Keyword(null,\"value\",\"value\",305978217),(1)], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56543,data_56547);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.add(cljs.core.clj__GT_js(data_56547));\r\n} else {\r\n}\r\n}\r\n\r\n\r\nvar G__56552 = seq__56330_56538;\r\nvar G__56553 = chunk__56331_56539;\r\nvar G__56554 = count__56332_56540;\r\nvar G__56555 = (i__56333_56541 + (1));\r\nseq__56330_56538 = G__56552;\r\nchunk__56331_56539 = G__56553;\r\ncount__56332_56540 = G__56554;\r\ni__56333_56541 = G__56555;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56556__$1 = cljs.core.seq(seq__56330_56538);\r\nif(temp__5735__auto___56556__$1){\r\nvar seq__56330_56557__$1 = temp__5735__auto___56556__$1;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56330_56557__$1)){\r\nvar c__4556__auto___56559 = cljs.core.chunk_first(seq__56330_56557__$1);\r\nvar G__56560 = cljs.core.chunk_rest(seq__56330_56557__$1);\r\nvar G__56561 = c__4556__auto___56559;\r\nvar G__56562 = cljs.core.count(c__4556__auto___56559);\r\nvar G__56563 = (0);\r\nseq__56330_56538 = G__56560;\r\nchunk__56331_56539 = G__56561;\r\ncount__56332_56540 = G__56562;\r\ni__56333_56541 = G__56563;\r\ncontinue;\r\n} else {\r\nvar input_reaction_56564 = cljs.core.first(seq__56330_56557__$1);\r\nvar reaction_path_56565 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56564),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56530)].join('');\r\nvar temp__5733__auto___56566 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.edges),reaction_path_56565);\r\nif(cljs.core.truth_(temp__5733__auto___56566)){\r\nvar old_edge_56567 = temp__5733__auto___56566;\r\nvar updated_edge_56568 = cljs.core.update.cljs$core$IFn$_invoke$arity$3(old_edge_56567,new cljs.core.Keyword(null,\"value\",\"value\",305978217),cljs.core.inc);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56565,updated_edge_56568);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_edge_56568], null)));\r\n} else {\r\n}\r\n} else {\r\nvar data_56569 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_path_56565,new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56564,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56530,new cljs.core.Keyword(null,\"value\",\"value\",305978217),(1)], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56565,data_56569);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.add(cljs.core.clj__GT_js(data_56569));\r\n} else {\r\n}\r\n}\r\n\r\n\r\nvar G__56570 = cljs.core.next(seq__56330_56557__$1);\r\nvar G__56571 = null;\r\nvar G__56572 = (0);\r\nvar G__56573 = (0);\r\nseq__56330_56538 = G__56570;\r\nchunk__56331_56539 = G__56571;\r\ncount__56332_56540 = G__56572;\r\ni__56333_56541 = G__56573;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\n}\r\n\r\n\r\nvar G__56574 = cljs.core.next(seq__56279_56517__$1);\r\nvar G__56575 = null;\r\nvar G__56576 = (0);\r\nvar G__56577 = (0);\r\nseq__56279_56461 = G__56574;\r\nchunk__56280_56462 = G__56575;\r\ncount__56281_56463 = G__56576;\r\ni__56282_56464 = G__56577;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\n\r\nvar G__56578 = seq__56120_56454;\r\nvar G__56579 = chunk__56121_56455;\r\nvar G__56580 = count__56122_56456;\r\nvar G__56581 = (i__56123_56457 + (1));\r\nseq__56120_56454 = G__56578;\r\nchunk__56121_56455 = G__56579;\r\ncount__56122_56456 = G__56580;\r\ni__56123_56457 = G__56581;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56582 = cljs.core.seq(seq__56120_56454);\r\nif(temp__5735__auto___56582){\r\nvar seq__56120_56583__$1 = temp__5735__auto___56582;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56120_56583__$1)){\r\nvar c__4556__auto___56584 = cljs.core.chunk_first(seq__56120_56583__$1);\r\nvar G__56585 = cljs.core.chunk_rest(seq__56120_56583__$1);\r\nvar G__56586 = c__4556__auto___56584;\r\nvar G__56587 = cljs.core.count(c__4556__auto___56584);\r\nvar G__56588 = (0);\r\nseq__56120_56454 = G__56585;\r\nchunk__56121_56455 = G__56586;\r\ncount__56122_56456 = G__56587;\r\ni__56123_56457 = G__56588;\r\ncontinue;\r\n} else {\r\nvar map__56335_56589 = cljs.core.first(seq__56120_56583__$1);\r\nvar map__56335_56590__$1 = (((((!((map__56335_56589 == null))))?(((((map__56335_56589.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56335_56589.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56335_56589):map__56335_56589);\r\nvar subs_56591 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56335_56590__$1,new cljs.core.Keyword(null,\"subs\",\"subs\",-186681991));\r\nvar seq__56337_56592 = cljs.core.seq(subs_56591);\r\nvar chunk__56338_56593 = null;\r\nvar count__56339_56594 = (0);\r\nvar i__56340_56595 = (0);\r\nwhile(true){\r\nif((i__56340_56595 < count__56339_56594)){\r\nvar map__56380_56596 = chunk__56338_56593.cljs$core$IIndexed$_nth$arity$2(null,i__56340_56595);\r\nvar map__56380_56597__$1 = (((((!((map__56380_56596 == null))))?(((((map__56380_56596.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56380_56596.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56380_56596):map__56380_56596);\r\nvar op_type_56598 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56380_56597__$1,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668));\r\nvar reaction_56599 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56380_56597__$1,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788));\r\nvar input_signals_56600 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56380_56597__$1,new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497));\r\nvar operation_56601 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56380_56597__$1,new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310));\r\nvar temp__5733__auto___56602 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.nodes),reaction_56599);\r\nif(cljs.core.truth_(temp__5733__auto___56602)){\r\nvar old_reaction_56603 = temp__5733__auto___56602;\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(op_type_56598,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(old_reaction_56603))){\r\nvar updated_node_56604 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(old_reaction_56603,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56598,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56598)], null)], 0));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.nodes,cljs.core.assoc,reaction_56599,updated_node_56604);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).nodes.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_node_56604], null)));\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\nvar data_56605 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_56599,new cljs.core.Keyword(null,\"label\",\"label\",1718410804),operation_56601,new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56598)], null),new cljs.core.Keyword(null,\"font\",\"font\",-1506159249),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.Keyword(null,\"white\",\"white\",-483998618)], null),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56598], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.nodes,cljs.core.assoc,reaction_56599,data_56605);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(new_nodes,cljs.core.conj,data_56605);\r\n}\r\n\r\nif(cljs.core.truth_(input_signals_56600)){\r\nvar seq__56382_56608 = cljs.core.seq(input_signals_56600);\r\nvar chunk__56383_56609 = null;\r\nvar count__56384_56610 = (0);\r\nvar i__56385_56611 = (0);\r\nwhile(true){\r\nif((i__56385_56611 < count__56384_56610)){\r\nvar input_reaction_56612 = chunk__56383_56609.cljs$core$IIndexed$_nth$arity$2(null,i__56385_56611);\r\nvar reaction_path_56613 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56612),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56599)].join('');\r\nvar temp__5733__auto___56614 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.edges),reaction_path_56613);\r\nif(cljs.core.truth_(temp__5733__auto___56614)){\r\nvar old_edge_56615 = temp__5733__auto___56614;\r\nvar updated_edge_56616 = cljs.core.update.cljs$core$IFn$_invoke$arity$3(old_edge_56615,new cljs.core.Keyword(null,\"value\",\"value\",305978217),cljs.core.inc);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56613,updated_edge_56616);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_edge_56616], null)));\r\n} else {\r\n}\r\n} else {\r\nvar data_56617 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_path_56613,new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56612,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56599,new cljs.core.Keyword(null,\"value\",\"value\",305978217),(1)], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56613,data_56617);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.add(cljs.core.clj__GT_js(data_56617));\r\n} else {\r\n}\r\n}\r\n\r\n\r\nvar G__56619 = seq__56382_56608;\r\nvar G__56620 = chunk__56383_56609;\r\nvar G__56621 = count__56384_56610;\r\nvar G__56622 = (i__56385_56611 + (1));\r\nseq__56382_56608 = G__56619;\r\nchunk__56383_56609 = G__56620;\r\ncount__56384_56610 = G__56621;\r\ni__56385_56611 = G__56622;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56624__$1 = cljs.core.seq(seq__56382_56608);\r\nif(temp__5735__auto___56624__$1){\r\nvar seq__56382_56625__$1 = temp__5735__auto___56624__$1;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56382_56625__$1)){\r\nvar c__4556__auto___56626 = cljs.core.chunk_first(seq__56382_56625__$1);\r\nvar G__56627 = cljs.core.chunk_rest(seq__56382_56625__$1);\r\nvar G__56628 = c__4556__auto___56626;\r\nvar G__56629 = cljs.core.count(c__4556__auto___56626);\r\nvar G__56630 = (0);\r\nseq__56382_56608 = G__56627;\r\nchunk__56383_56609 = G__56628;\r\ncount__56384_56610 = G__56629;\r\ni__56385_56611 = G__56630;\r\ncontinue;\r\n} else {\r\nvar input_reaction_56631 = cljs.core.first(seq__56382_56625__$1);\r\nvar reaction_path_56632 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56631),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56599)].join('');\r\nvar temp__5733__auto___56633 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.edges),reaction_path_56632);\r\nif(cljs.core.truth_(temp__5733__auto___56633)){\r\nvar old_edge_56634 = temp__5733__auto___56633;\r\nvar updated_edge_56635 = cljs.core.update.cljs$core$IFn$_invoke$arity$3(old_edge_56634,new cljs.core.Keyword(null,\"value\",\"value\",305978217),cljs.core.inc);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56632,updated_edge_56635);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_edge_56635], null)));\r\n} else {\r\n}\r\n} else {\r\nvar data_56636 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_path_56632,new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56631,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56599,new cljs.core.Keyword(null,\"value\",\"value\",305978217),(1)], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56632,data_56636);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.add(cljs.core.clj__GT_js(data_56636));\r\n} else {\r\n}\r\n}\r\n\r\n\r\nvar G__56637 = cljs.core.next(seq__56382_56625__$1);\r\nvar G__56638 = null;\r\nvar G__56639 = (0);\r\nvar G__56640 = (0);\r\nseq__56382_56608 = G__56637;\r\nchunk__56383_56609 = G__56638;\r\ncount__56384_56610 = G__56639;\r\ni__56385_56611 = G__56640;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\n}\r\n\r\n\r\nvar G__56641 = seq__56337_56592;\r\nvar G__56642 = chunk__56338_56593;\r\nvar G__56643 = count__56339_56594;\r\nvar G__56644 = (i__56340_56595 + (1));\r\nseq__56337_56592 = G__56641;\r\nchunk__56338_56593 = G__56642;\r\ncount__56339_56594 = G__56643;\r\ni__56340_56595 = G__56644;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56645__$1 = cljs.core.seq(seq__56337_56592);\r\nif(temp__5735__auto___56645__$1){\r\nvar seq__56337_56646__$1 = temp__5735__auto___56645__$1;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56337_56646__$1)){\r\nvar c__4556__auto___56647 = cljs.core.chunk_first(seq__56337_56646__$1);\r\nvar G__56648 = cljs.core.chunk_rest(seq__56337_56646__$1);\r\nvar G__56649 = c__4556__auto___56647;\r\nvar G__56650 = cljs.core.count(c__4556__auto___56647);\r\nvar G__56651 = (0);\r\nseq__56337_56592 = G__56648;\r\nchunk__56338_56593 = G__56649;\r\ncount__56339_56594 = G__56650;\r\ni__56340_56595 = G__56651;\r\ncontinue;\r\n} else {\r\nvar map__56386_56654 = cljs.core.first(seq__56337_56646__$1);\r\nvar map__56386_56655__$1 = (((((!((map__56386_56654 == null))))?(((((map__56386_56654.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56386_56654.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56386_56654):map__56386_56654);\r\nvar op_type_56656 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56386_56655__$1,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668));\r\nvar reaction_56657 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56386_56655__$1,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788));\r\nvar input_signals_56658 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56386_56655__$1,new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497));\r\nvar operation_56659 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56386_56655__$1,new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310));\r\nvar temp__5733__auto___56660 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.nodes),reaction_56657);\r\nif(cljs.core.truth_(temp__5733__auto___56660)){\r\nvar old_reaction_56661 = temp__5733__auto___56660;\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(op_type_56656,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(old_reaction_56661))){\r\nvar updated_node_56662 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(old_reaction_56661,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56656,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56656)], null)], 0));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.nodes,cljs.core.assoc,reaction_56657,updated_node_56662);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).nodes.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_node_56662], null)));\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\nvar data_56663 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_56657,new cljs.core.Keyword(null,\"label\",\"label\",1718410804),operation_56659,new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56656)], null),new cljs.core.Keyword(null,\"font\",\"font\",-1506159249),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.Keyword(null,\"white\",\"white\",-483998618)], null),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56656], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.nodes,cljs.core.assoc,reaction_56657,data_56663);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(new_nodes,cljs.core.conj,data_56663);\r\n}\r\n\r\nif(cljs.core.truth_(input_signals_56658)){\r\nvar seq__56388_56664 = cljs.core.seq(input_signals_56658);\r\nvar chunk__56389_56665 = null;\r\nvar count__56390_56666 = (0);\r\nvar i__56391_56667 = (0);\r\nwhile(true){\r\nif((i__56391_56667 < count__56390_56666)){\r\nvar input_reaction_56668 = chunk__56389_56665.cljs$core$IIndexed$_nth$arity$2(null,i__56391_56667);\r\nvar reaction_path_56669 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56668),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56657)].join('');\r\nvar temp__5733__auto___56670 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.edges),reaction_path_56669);\r\nif(cljs.core.truth_(temp__5733__auto___56670)){\r\nvar old_edge_56671 = temp__5733__auto___56670;\r\nvar updated_edge_56672 = cljs.core.update.cljs$core$IFn$_invoke$arity$3(old_edge_56671,new cljs.core.Keyword(null,\"value\",\"value\",305978217),cljs.core.inc);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56669,updated_edge_56672);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_edge_56672], null)));\r\n} else {\r\n}\r\n} else {\r\nvar data_56675 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_path_56669,new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56668,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56657,new cljs.core.Keyword(null,\"value\",\"value\",305978217),(1)], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56669,data_56675);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.add(cljs.core.clj__GT_js(data_56675));\r\n} else {\r\n}\r\n}\r\n\r\n\r\nvar G__56679 = seq__56388_56664;\r\nvar G__56680 = chunk__56389_56665;\r\nvar G__56681 = count__56390_56666;\r\nvar G__56682 = (i__56391_56667 + (1));\r\nseq__56388_56664 = G__56679;\r\nchunk__56389_56665 = G__56680;\r\ncount__56390_56666 = G__56681;\r\ni__56391_56667 = G__56682;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56683__$2 = cljs.core.seq(seq__56388_56664);\r\nif(temp__5735__auto___56683__$2){\r\nvar seq__56388_56684__$1 = temp__5735__auto___56683__$2;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56388_56684__$1)){\r\nvar c__4556__auto___56685 = cljs.core.chunk_first(seq__56388_56684__$1);\r\nvar G__56686 = cljs.core.chunk_rest(seq__56388_56684__$1);\r\nvar G__56687 = c__4556__auto___56685;\r\nvar G__56688 = cljs.core.count(c__4556__auto___56685);\r\nvar G__56689 = (0);\r\nseq__56388_56664 = G__56686;\r\nchunk__56389_56665 = G__56687;\r\ncount__56390_56666 = G__56688;\r\ni__56391_56667 = G__56689;\r\ncontinue;\r\n} else {\r\nvar input_reaction_56690 = cljs.core.first(seq__56388_56684__$1);\r\nvar reaction_path_56691 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56690),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56657)].join('');\r\nvar temp__5733__auto___56692 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frisk.subs_graph.edges),reaction_path_56691);\r\nif(cljs.core.truth_(temp__5733__auto___56692)){\r\nvar old_edge_56693 = temp__5733__auto___56692;\r\nvar updated_edge_56694 = cljs.core.update.cljs$core$IFn$_invoke$arity$3(old_edge_56693,new cljs.core.Keyword(null,\"value\",\"value\",305978217),cljs.core.inc);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56691,updated_edge_56694);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.update(cljs.core.clj__GT_js(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [updated_edge_56694], null)));\r\n} else {\r\n}\r\n} else {\r\nvar data_56696 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_path_56691,new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56690,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56657,new cljs.core.Keyword(null,\"value\",\"value\",305978217),(1)], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frisk.subs_graph.edges,cljs.core.assoc,reaction_path_56691,data_56696);\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).edges.add(cljs.core.clj__GT_js(data_56696));\r\n} else {\r\n}\r\n}\r\n\r\n\r\nvar G__56697 = cljs.core.next(seq__56388_56684__$1);\r\nvar G__56698 = null;\r\nvar G__56699 = (0);\r\nvar G__56700 = (0);\r\nseq__56388_56664 = G__56697;\r\nchunk__56389_56665 = G__56698;\r\ncount__56390_56666 = G__56699;\r\ni__56391_56667 = G__56700;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\n}\r\n\r\n\r\nvar G__56701 = cljs.core.next(seq__56337_56646__$1);\r\nvar G__56702 = null;\r\nvar G__56703 = (0);\r\nvar G__56704 = (0);\r\nseq__56337_56592 = G__56701;\r\nchunk__56338_56593 = G__56702;\r\ncount__56339_56594 = G__56703;\r\ni__56340_56595 = G__56704;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\n\r\nvar G__56706 = cljs.core.next(seq__56120_56583__$1);\r\nvar G__56707 = null;\r\nvar G__56708 = (0);\r\nvar G__56709 = (0);\r\nseq__56120_56454 = G__56706;\r\nchunk__56121_56455 = G__56707;\r\ncount__56122_56456 = G__56708;\r\ni__56123_56457 = G__56709;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.network))){\r\nif((cljs.core.count(cljs.core.deref(new_nodes)) > (20))){\r\nreturn re_frisk.subs_graph.create();\r\n} else {\r\nvar seq__56392 = cljs.core.seq(cljs.core.deref(new_nodes));\r\nvar chunk__56393 = null;\r\nvar count__56394 = (0);\r\nvar i__56395 = (0);\r\nwhile(true){\r\nif((i__56395 < count__56394)){\r\nvar data = chunk__56393.cljs$core$IIndexed$_nth$arity$2(null,i__56395);\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).nodes.add(cljs.core.clj__GT_js(data));\r\n\r\n\r\nvar G__56712 = seq__56392;\r\nvar G__56713 = chunk__56393;\r\nvar G__56714 = count__56394;\r\nvar G__56715 = (i__56395 + (1));\r\nseq__56392 = G__56712;\r\nchunk__56393 = G__56713;\r\ncount__56394 = G__56714;\r\ni__56395 = G__56715;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto__ = cljs.core.seq(seq__56392);\r\nif(temp__5735__auto__){\r\nvar seq__56392__$1 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56392__$1)){\r\nvar c__4556__auto__ = cljs.core.chunk_first(seq__56392__$1);\r\nvar G__56716 = cljs.core.chunk_rest(seq__56392__$1);\r\nvar G__56717 = c__4556__auto__;\r\nvar G__56718 = cljs.core.count(c__4556__auto__);\r\nvar G__56719 = (0);\r\nseq__56392 = G__56716;\r\nchunk__56393 = G__56717;\r\ncount__56394 = G__56718;\r\ni__56395 = G__56719;\r\ncontinue;\r\n} else {\r\nvar data = cljs.core.first(seq__56392__$1);\r\nnew cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frisk.subs_graph.network)).nodes.add(cljs.core.clj__GT_js(data));\r\n\r\n\r\nvar G__56720 = cljs.core.next(seq__56392__$1);\r\nvar G__56721 = null;\r\nvar G__56722 = (0);\r\nvar G__56723 = (0);\r\nseq__56392 = G__56720;\r\nchunk__56393 = G__56721;\r\ncount__56394 = G__56722;\r\ni__56395 = G__56723;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nif((typeof re_frisk !== 'undefined') && (typeof re_frisk.subs_graph !== 'undefined') && (typeof re_frisk.subs_graph.event_network !== 'undefined')){\r\n} else {\r\nre_frisk.subs_graph.event_network = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\r\n}\r\nre_frisk.subs_graph.create_event_subs = (function re_frisk$subs_graph$create_event_subs(p__56399){\r\nvar map__56400 = p__56399;\r\nvar map__56400__$1 = (((((!((map__56400 == null))))?(((((map__56400.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56400.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56400):map__56400);\r\nvar app_db_reaction = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56400__$1,new cljs.core.Keyword(null,\"app-db-reaction\",\"app-db-reaction\",-269835135));\r\nvar subs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56400__$1,new cljs.core.Keyword(null,\"subs\",\"subs\",-186681991));\r\nif(cljs.core.truth_(cljs.core.deref(re_frisk.subs_graph.event_network))){\r\ncljs.core.deref(re_frisk.subs_graph.event_network).destroy();\r\n\r\ncljs.core.reset_BANG_(re_frisk.subs_graph.event_network,null);\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((function (){var and__4115__auto__ = cljs.core.deref(re_frisk.subs_graph.vis);\r\nif(cljs.core.truth_(and__4115__auto__)){\r\nreturn cljs.core.deref(re_frisk.subs_graph.doc);\r\n} else {\r\nreturn and__4115__auto__;\r\n}\r\n})())){\r\nvar temp__5735__auto__ = cljs.core.deref(re_frisk.subs_graph.doc).getElementById(\"event-subs-graph-container\");\r\nif(cljs.core.truth_(temp__5735__auto__)){\r\nvar container = temp__5735__auto__;\r\nvar Network = cljs.core.deref(re_frisk.subs_graph.vis).Network;\r\nvar DataSet = cljs.core.deref(re_frisk.subs_graph.vis).DataSet;\r\nvar nodes = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.createAsIfByAssoc([app_db_reaction,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),app_db_reaction,new cljs.core.Keyword(null,\"label\",\"label\",1718410804),\"app-db\",new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),new cljs.core.Keyword(null,\"yellow\",\"yellow\",-881035449)], null)], null)]));\r\nvar edges = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar seq__56405_56727 = cljs.core.seq(subs);\r\nvar chunk__56406_56728 = null;\r\nvar count__56407_56729 = (0);\r\nvar i__56408_56730 = (0);\r\nwhile(true){\r\nif((i__56408_56730 < count__56407_56729)){\r\nvar map__56425_56731 = chunk__56406_56728.cljs$core$IIndexed$_nth$arity$2(null,i__56408_56730);\r\nvar map__56425_56732__$1 = (((((!((map__56425_56731 == null))))?(((((map__56425_56731.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56425_56731.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56425_56731):map__56425_56731);\r\nvar op_type_56733 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56425_56732__$1,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668));\r\nvar reaction_56734 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56425_56732__$1,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788));\r\nvar input_signals_56735 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56425_56732__$1,new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497));\r\nvar operation_56736 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56425_56732__$1,new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310));\r\nvar temp__5733__auto___56737 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(nodes),reaction_56734);\r\nif(cljs.core.truth_(temp__5733__auto___56737)){\r\nvar old_reaction_56738 = temp__5733__auto___56737;\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(op_type_56733,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(old_reaction_56738))){\r\nvar updated_node_56739 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(old_reaction_56738,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56733,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56733)], null)], 0));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(nodes,cljs.core.assoc,reaction_56734,updated_node_56739);\r\n} else {\r\n}\r\n} else {\r\nvar data_56740 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_56734,new cljs.core.Keyword(null,\"label\",\"label\",1718410804),operation_56736,new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56733)], null),new cljs.core.Keyword(null,\"font\",\"font\",-1506159249),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.Keyword(null,\"white\",\"white\",-483998618)], null),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56733], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(nodes,cljs.core.assoc,reaction_56734,data_56740);\r\n}\r\n\r\nif(cljs.core.truth_(input_signals_56735)){\r\nvar seq__56428_56741 = cljs.core.seq(input_signals_56735);\r\nvar chunk__56429_56742 = null;\r\nvar count__56430_56743 = (0);\r\nvar i__56431_56744 = (0);\r\nwhile(true){\r\nif((i__56431_56744 < count__56430_56743)){\r\nvar input_reaction_56745 = chunk__56429_56742.cljs$core$IIndexed$_nth$arity$2(null,i__56431_56744);\r\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(edges),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56745),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56734)].join('')))){\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(edges,cljs.core.assoc,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56745),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56734)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56745,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56734], null));\r\n}\r\n\r\n\r\nvar G__56746 = seq__56428_56741;\r\nvar G__56747 = chunk__56429_56742;\r\nvar G__56748 = count__56430_56743;\r\nvar G__56749 = (i__56431_56744 + (1));\r\nseq__56428_56741 = G__56746;\r\nchunk__56429_56742 = G__56747;\r\ncount__56430_56743 = G__56748;\r\ni__56431_56744 = G__56749;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56751__$1 = cljs.core.seq(seq__56428_56741);\r\nif(temp__5735__auto___56751__$1){\r\nvar seq__56428_56753__$1 = temp__5735__auto___56751__$1;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56428_56753__$1)){\r\nvar c__4556__auto___56755 = cljs.core.chunk_first(seq__56428_56753__$1);\r\nvar G__56756 = cljs.core.chunk_rest(seq__56428_56753__$1);\r\nvar G__56757 = c__4556__auto___56755;\r\nvar G__56758 = cljs.core.count(c__4556__auto___56755);\r\nvar G__56759 = (0);\r\nseq__56428_56741 = G__56756;\r\nchunk__56429_56742 = G__56757;\r\ncount__56430_56743 = G__56758;\r\ni__56431_56744 = G__56759;\r\ncontinue;\r\n} else {\r\nvar input_reaction_56760 = cljs.core.first(seq__56428_56753__$1);\r\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(edges),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56760),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56734)].join('')))){\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(edges,cljs.core.assoc,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56760),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56734)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56760,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56734], null));\r\n}\r\n\r\n\r\nvar G__56761 = cljs.core.next(seq__56428_56753__$1);\r\nvar G__56762 = null;\r\nvar G__56763 = (0);\r\nvar G__56764 = (0);\r\nseq__56428_56741 = G__56761;\r\nchunk__56429_56742 = G__56762;\r\ncount__56430_56743 = G__56763;\r\ni__56431_56744 = G__56764;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\n}\r\n\r\n\r\nvar G__56765 = seq__56405_56727;\r\nvar G__56766 = chunk__56406_56728;\r\nvar G__56767 = count__56407_56729;\r\nvar G__56768 = (i__56408_56730 + (1));\r\nseq__56405_56727 = G__56765;\r\nchunk__56406_56728 = G__56766;\r\ncount__56407_56729 = G__56767;\r\ni__56408_56730 = G__56768;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56769__$1 = cljs.core.seq(seq__56405_56727);\r\nif(temp__5735__auto___56769__$1){\r\nvar seq__56405_56770__$1 = temp__5735__auto___56769__$1;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56405_56770__$1)){\r\nvar c__4556__auto___56771 = cljs.core.chunk_first(seq__56405_56770__$1);\r\nvar G__56772 = cljs.core.chunk_rest(seq__56405_56770__$1);\r\nvar G__56773 = c__4556__auto___56771;\r\nvar G__56774 = cljs.core.count(c__4556__auto___56771);\r\nvar G__56775 = (0);\r\nseq__56405_56727 = G__56772;\r\nchunk__56406_56728 = G__56773;\r\ncount__56407_56729 = G__56774;\r\ni__56408_56730 = G__56775;\r\ncontinue;\r\n} else {\r\nvar map__56434_56776 = cljs.core.first(seq__56405_56770__$1);\r\nvar map__56434_56777__$1 = (((((!((map__56434_56776 == null))))?(((((map__56434_56776.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56434_56776.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56434_56776):map__56434_56776);\r\nvar op_type_56778 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56434_56777__$1,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668));\r\nvar reaction_56779 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56434_56777__$1,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788));\r\nvar input_signals_56780 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56434_56777__$1,new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497));\r\nvar operation_56781 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56434_56777__$1,new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310));\r\nvar temp__5733__auto___56784 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(nodes),reaction_56779);\r\nif(cljs.core.truth_(temp__5733__auto___56784)){\r\nvar old_reaction_56785 = temp__5733__auto___56784;\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(op_type_56778,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(old_reaction_56785))){\r\nvar updated_node_56786 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(old_reaction_56785,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56778,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56778)], null)], 0));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(nodes,cljs.core.assoc,reaction_56779,updated_node_56786);\r\n} else {\r\n}\r\n} else {\r\nvar data_56787 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),reaction_56779,new cljs.core.Keyword(null,\"label\",\"label\",1718410804),operation_56781,new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"background\",\"background\",-863952629),cljs.core.get.cljs$core$IFn$_invoke$arity$2(re_frisk.ui.components.colors.sub_colors,op_type_56778)], null),new cljs.core.Keyword(null,\"font\",\"font\",-1506159249),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"color\",\"color\",1011675173),new cljs.core.Keyword(null,\"white\",\"white\",-483998618)], null),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type_56778], null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(nodes,cljs.core.assoc,reaction_56779,data_56787);\r\n}\r\n\r\nif(cljs.core.truth_(input_signals_56780)){\r\nvar seq__56438_56788 = cljs.core.seq(input_signals_56780);\r\nvar chunk__56439_56789 = null;\r\nvar count__56440_56790 = (0);\r\nvar i__56441_56791 = (0);\r\nwhile(true){\r\nif((i__56441_56791 < count__56440_56790)){\r\nvar input_reaction_56792 = chunk__56439_56789.cljs$core$IIndexed$_nth$arity$2(null,i__56441_56791);\r\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(edges),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56792),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56779)].join('')))){\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(edges,cljs.core.assoc,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56792),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56779)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56792,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56779], null));\r\n}\r\n\r\n\r\nvar G__56793 = seq__56438_56788;\r\nvar G__56794 = chunk__56439_56789;\r\nvar G__56795 = count__56440_56790;\r\nvar G__56796 = (i__56441_56791 + (1));\r\nseq__56438_56788 = G__56793;\r\nchunk__56439_56789 = G__56794;\r\ncount__56440_56790 = G__56795;\r\ni__56441_56791 = G__56796;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___56797__$2 = cljs.core.seq(seq__56438_56788);\r\nif(temp__5735__auto___56797__$2){\r\nvar seq__56438_56798__$1 = temp__5735__auto___56797__$2;\r\nif(cljs.core.chunked_seq_QMARK_(seq__56438_56798__$1)){\r\nvar c__4556__auto___56799 = cljs.core.chunk_first(seq__56438_56798__$1);\r\nvar G__56800 = cljs.core.chunk_rest(seq__56438_56798__$1);\r\nvar G__56801 = c__4556__auto___56799;\r\nvar G__56802 = cljs.core.count(c__4556__auto___56799);\r\nvar G__56803 = (0);\r\nseq__56438_56788 = G__56800;\r\nchunk__56439_56789 = G__56801;\r\ncount__56440_56790 = G__56802;\r\ni__56441_56791 = G__56803;\r\ncontinue;\r\n} else {\r\nvar input_reaction_56804 = cljs.core.first(seq__56438_56798__$1);\r\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(edges),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56804),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56779)].join('')))){\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(edges,cljs.core.assoc,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(input_reaction_56804),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(reaction_56779)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"from\",\"from\",1815293044),input_reaction_56804,new cljs.core.Keyword(null,\"to\",\"to\",192099007),reaction_56779], null));\r\n}\r\n\r\n\r\nvar G__56805 = cljs.core.next(seq__56438_56798__$1);\r\nvar G__56806 = null;\r\nvar G__56807 = (0);\r\nvar G__56808 = (0);\r\nseq__56438_56788 = G__56805;\r\nchunk__56439_56789 = G__56806;\r\ncount__56440_56790 = G__56807;\r\ni__56441_56791 = G__56808;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\n}\r\n\r\n\r\nvar G__56809 = cljs.core.next(seq__56405_56770__$1);\r\nvar G__56810 = null;\r\nvar G__56811 = (0);\r\nvar G__56812 = (0);\r\nseq__56405_56727 = G__56809;\r\nchunk__56406_56728 = G__56810;\r\ncount__56407_56729 = G__56811;\r\ni__56408_56730 = G__56812;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core.reset_BANG_(re_frisk.subs_graph.event_network,(new Network(container,({\"nodes\": (new DataSet(cljs.core.clj__GT_js(cljs.core.vals(cljs.core.deref(nodes))))), \"edges\": (new DataSet(cljs.core.clj__GT_js(cljs.core.vals(cljs.core.deref(edges)))))}),re_frisk.subs_graph.options)));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frisk/subs_graph.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",24],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frisk.subs-graph","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frisk.ui.components.colors","^Q","~$colors","^Q","~$cljs.core","^S","~$goog","^T"],"~:seen",["^J",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^S","^S"],"~:form",["~#list",["~$ns","^L",["^Z",["^V",["^Q","~:as","^R"]]]]],"~:flags",["^ ","^V",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^Q"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","re_frisk/subs_graph.cljs"],"~:compiled-at",1595281907334,"~:resource-name","re_frisk/subs_graph.cljs","~:warnings",[],"~:source","(ns re-frisk.subs-graph\n  (:require [re-frisk.ui.components.colors :as colors]))\n\n(defonce network (atom nil))\n(defonce vis (atom nil))\n(defonce doc (atom nil))\n(defonce nodes (atom {}))\n(defonce edges (atom {}))\n(defonce options (clj->js {:physics\n                           {:solver        \"forceAtlas2Based\"\n                            :maxVelocity   30\n                            :minVelocity   10\n                            :stabilization {:iterations 30}}}))\n\n(defn init [win document]\n  (reset! vis (.-vis ^js win))\n  (reset! doc document))\n\n(defn set-root-node [reaction]\n  (when-not (get @nodes reaction)\n    (let [data {:id reaction :label \"app-db\" :color {:background :yellow}}]\n      (swap! nodes assoc reaction data)\n      (when @network\n        (.add (.-nodes ^js (:data @network)) (clj->js data))))))\n\n(defn destroy []\n  (when-let [network-js (:network @network)]\n    (.destroy network-js)\n    (reset! network nil)))\n\n(defn create []\n  (destroy)\n  (when (and @vis @doc)\n    (let [Network  (.-Network ^js @vis)\n          DataSet  (.-DataSet ^js @vis)\n          nodes-ds (DataSet. (clj->js (vals @nodes)))\n          edges-ds (DataSet. (clj->js (vals @edges)))\n          data     #js {:nodes nodes-ds\n                        :edges edges-ds}]\n      (when-let [container (.getElementById @doc \"global-subs-graph-container\")]\n        (reset! network {:data    data\n                         :network (Network. container data options)})))))\n\n(defn update-subs [traces]\n  (when-let [app-db-reaction (:app-db-reaction (first traces))]\n    (set-root-node app-db-reaction))\n  (let [new-nodes (atom [])]\n    (doseq [{:keys [subs]} traces]\n      (doseq [{:keys [op-type reaction input-signals operation]} subs]\n        (if-let [old-reaction (get @nodes reaction)]\n          (when (not= op-type (:op-type old-reaction))\n            (let [updated-node (assoc old-reaction\n                                 :op-type op-type\n                                 :color {:background (get colors/sub-colors op-type)})]\n              (swap! nodes assoc reaction updated-node)\n              (when @network\n                (.update (.-nodes ^js (:data @network)) (clj->js [updated-node])))))\n          (let [data {:id      reaction :label operation :color {:background (get colors/sub-colors op-type)}\n                      :font {:color :white}\n                      :op-type op-type}]\n            (swap! nodes assoc reaction data)\n            (swap! new-nodes conj data)))\n        (when input-signals\n          (doseq [input-reaction input-signals]\n            (let [reaction-path (str input-reaction \"-\" reaction)]\n              (if-let [old-edge (get @edges reaction-path)]\n                (let [updated-edge (update old-edge :value inc)]\n                  (swap! edges assoc reaction-path updated-edge)\n                  (when @network\n                    (.update (.-edges ^js (:data @network)) (clj->js [updated-edge]))))\n                (let [data {:id reaction-path :from input-reaction :to reaction :value 1}]\n                  (swap! edges assoc reaction-path data)\n                  (when @network\n                    (.add (.-edges ^js (:data @network)) (clj->js data))))))))))\n    (when @network\n      (if (> (count @new-nodes) 20)\n        (create)\n        (doseq [data @new-nodes]\n          (.add (.-nodes ^js (:data @network)) (clj->js data)))))))\n\n(defonce event-network (atom nil))\n\n(defn create-event-subs [{:keys [app-db-reaction subs]}]\n  (when @event-network\n    (.destroy @event-network)\n    (reset! event-network nil))\n  (when (and @vis @doc)\n    (when-let [container (.getElementById @doc \"event-subs-graph-container\")]\n      (let [Network  (.-Network ^js @vis)\n            DataSet  (.-DataSet ^js @vis)\n            nodes (atom {app-db-reaction {:id app-db-reaction :label \"app-db\" :color {:background :yellow}}})\n            edges (atom {})]\n        (doseq [{:keys [op-type reaction input-signals operation]} subs]\n          (if-let [old-reaction (get @nodes reaction)]\n            (when (not= op-type (:op-type old-reaction))\n              (let [updated-node (assoc old-reaction\n                                   :op-type op-type\n                                   :color {:background (get colors/sub-colors op-type)})]\n                (swap! nodes assoc reaction updated-node)))\n            (let [data {:id      reaction :label operation :color {:background (get colors/sub-colors op-type)}\n                        :font {:color :white}\n                        :op-type op-type}]\n              (swap! nodes assoc reaction data)))\n          (when input-signals\n            (doseq [input-reaction input-signals]\n              (when-not (get @edges (str input-reaction \"-\" reaction))\n                (swap! edges assoc (str input-reaction \"-\" reaction) {:from input-reaction :to reaction})))))\n        (reset! event-network (Network. container #js {:nodes (DataSet. (clj->js (vals @nodes)))\n                                                       :edges (DataSet. (clj->js (vals @edges)))} options))))))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/re-frisk","js/re-frisk.subs-graph","js/re-frisk.subs-graph.network","re-frisk.subs-graph/network","cljs.core.atom","js/re-frisk.subs-graph.vis","re-frisk.subs-graph/vis","js/re-frisk.subs-graph.doc","re-frisk.subs-graph/doc","js/re-frisk.subs-graph.nodes","re-frisk.subs-graph/nodes","js/re-frisk.subs-graph.edges","re-frisk.subs-graph/edges","js/re-frisk.subs-graph.options","re-frisk.subs-graph/options","cljs.core/clj->js","re-frisk.subs-graph/init","win","document","cljs.core/reset!","re-frisk.subs-graph/set-root-node","reaction","cljs.core/deref","cljs.core.get","data","cljs.core.swap_BANG_","cljs.core/assoc","re-frisk.subs-graph/destroy","temp__5735__auto__","network-js","re-frisk.subs-graph/create","and__4115__auto__","Network","DataSet","nodes-ds","cljs.core/vals","edges-ds","container","re-frisk.subs-graph/update-subs","traces","app-db-reaction","cljs.core/first","new-nodes","seq__56120","cljs.core/seq","chunk__56121","count__56122","i__56123","map__56277","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","map__56335","cljs.core/next","subs","seq__56279","chunk__56280","count__56281","i__56282","map__56319","map__56328","seq__56337","chunk__56338","count__56339","i__56340","map__56380","map__56386","op-type","input-signals","operation","temp__5733__auto__","old-reaction","cljs.core.not_EQ_","updated-node","cljs.core.assoc","re-frisk.ui.components.colors/sub-colors","cljs.core/conj","seq__56321","chunk__56322","count__56323","i__56324","seq__56330","chunk__56331","count__56332","i__56333","seq__56382","chunk__56383","count__56384","i__56385","seq__56388","chunk__56389","count__56390","i__56391","input-reaction","reaction-path","old-edge","updated-edge","cljs.core.update","cljs.core/inc","seq__56392","chunk__56393","count__56394","i__56395","js/re-frisk.subs-graph.event-network","re-frisk.subs-graph/event-network","p__56399","map__56400","re-frisk.subs-graph/create-event-subs","nodes","edges","seq__56405","chunk__56406","count__56407","i__56408","map__56425","map__56434","seq__56428","chunk__56429","count__56430","i__56431","seq__56438","chunk__56439","count__56440","i__56441"]],"~:used-vars",["^J",["~$re-frisk.subs-graph/init","~$cljs.core/count","~$cljs.core/deref","~$js/re-frisk.subs-graph.edges","~$re-frisk.subs-graph/create","~$cljs.core/not=","~$cljs.core/chunk-rest","~$cljs.core/atom","~$re-frisk.subs-graph/doc","~$re-frisk.subs-graph/edges","~$cljs.core/reset!","~$cljs.core/conj","~$re-frisk.subs-graph/vis","~$re-frisk.subs-graph/update-subs","~$js/re-frisk.subs-graph.options","~$cljs.core/vals","~$cljs.core/swap!","~$js/re-frisk","~$cljs.core/get","~$re-frisk.subs-graph/nodes","~$cljs.core/clj->js","~$re-frisk.subs-graph/set-root-node","~$js/re-frisk.subs-graph.vis","~$js/re-frisk.subs-graph.doc","~$re-frisk.subs-graph/create-event-subs","~$cljs.core/next","~$re-frisk.subs-graph/options","~$js/re-frisk.subs-graph","~$re-frisk.subs-graph/destroy","~$cljs.core/assoc","~$js/re-frisk.subs-graph.network","~$js/re-frisk.subs-graph.event-network","~$js/re-frisk.subs-graph.nodes","~$re-frisk.subs-graph/event-network","~$re-frisk.subs-graph/network","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^15","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^T","~$goog.dom.HtmlElement"]]],["^15","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","~$goog.array","~$goog.asserts"]]],["^15","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2@","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^15","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2A","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2D"]]],["^15","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2A"]]],["^15","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2A"]]],"~:SHADOW-TIMESTAMP",[1595281711000,1595281711000,1594142331000],["^15","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2A","~$goog.reflect"]]],["^15","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2A","~$goog.html.trustedtypes","^2G","^2H","^2I","^2J"]]],["^15","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2@","^2A","~$goog.html.SafeUrl","^2I","^2J","^2D"]]],["^15","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2A","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2N","^2F","~$goog.html.uncheckedconversions","^2I","^2D"]]],["^15","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^15","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2@","^2A","~$goog.dom.TagName","~$goog.dom.tags","^2R","^2S","~$goog.html.SafeStyleSheet","^2N","^2F","^2M","^2G","^2H","~$goog.labs.userAgent.browser","^2C","^2I","^2J","^2D"]]],["^15","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2C"]]],["^15","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^15","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2@","^2A","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^15","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",[]]],["^15","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2@","^2C"]]],["^15","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","~$goog.dom.safe","^2T","^2I","^2D"]]],["^15","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2D"]]],["^15","re_frisk/subs_graph.cljs"],["a679fef757ed3afe45ac4bb7f90bf17dbe3cb0ed","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^S","^Q"]]],["^15","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2@","^2A","^2P","~$goog.math"]]],["^15","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2A","^2Q","^2R","^2S","^2Y","^2N","^2F","^2I","^2D"]]],["^15","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T"]]],["^15","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","~$goog.math.Long","~$goog.math.Integer","^31","^2C","^2@","~$goog.Uri","~$goog.string.StringBuffer"]]],["^15","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2A","^2M","^2I","^2J"]]],["^15","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2@","^2A","^2S","^2C","^2I","^2J","^2D"]]],["^15","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2L"]]],["^15","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2@","^2A","^31"]]],["^15","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^2A","^2J"]]],["^15","re_frisk/ui/components/colors.cljs"],["a679fef757ed3afe45ac4bb7f90bf17dbe3cb0ed","^2;",["^ ","^2<",null,"^2=",["^J",[]],"^2>",["^T","^S"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1578629526000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1576873426000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1578629526000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1578629526000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1594142336000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1578629526000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1576873426000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1576873426000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1576873426000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1576873426000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1576873426000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1578629347000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1578629526000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1594142331000,"jar:file:/C:/Users/BlackHammer06/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1576873426000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",1,"^8",5,"^9",1,"^:",24],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"~:shadow/js-access-properties",["^J",["vis","Network","nodes","edges","DataSet"]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^Q","^S","^S","^T","^T"],"^U",["^J",["^V"]],"^W",null,"~:defs",["^ ","~$network",["^ ","^K","^27","^6","re_frisk/subs_graph.cljs","^7",4,"^8",1,"^9",4,"^:",17,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",4,"^8",10,"^9",4,"^:",17],"~:tag","~$cljs.core/Atom"],"~$options",["^ ","^K","^1[","^6","re_frisk/subs_graph.cljs","^7",9,"^8",1,"^9",9,"^:",17,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",9,"^8",10,"^9",9,"^:",17],"^3[","~$any"],"~$doc",["^ ","^K","^1I","^6","re_frisk/subs_graph.cljs","^7",6,"^8",1,"^9",6,"^:",13,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",6,"^8",10,"^9",6,"^:",13],"^3[","^40"],"~$event-network",["^ ","^K","^26","^6","re_frisk/subs_graph.cljs","^7",81,"^8",1,"^9",81,"^:",23,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",81,"^8",10,"^9",81,"^:",23],"^3[","^40"],"~$edges",["^ ","^K","^1J","^6","re_frisk/subs_graph.cljs","^7",8,"^8",1,"^9",8,"^:",15,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",8,"^8",10,"^9",8,"^:",15],"^3[","^40"],"~$update-subs",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",44,"^8",7,"^9",44,"^:",18,"~:arglists",["^Z",["~$quote",["^Z",[["~$traces"]]]]]],"^K","^1N","^6","re_frisk/subs_graph.cljs","^:",18,"~:method-params",["^Z",[["^4:"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^8",1,"~:variadic?",false,"^7",44,"~:ret-tag",["^J",[null,"^42","~$clj-nil"]],"^9",44,"~:max-fixed-arity",1,"~:fn-var",true,"^48",["^Z",["^49",["^Z",[["^4:"]]]]]],"~$set-root-node",["^ ","^47",null,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",19,"^8",7,"^9",19,"^:",20,"^48",["^Z",["^49",["^Z",[["~$reaction"]]]]]],"^K","^1V","^6","re_frisk/subs_graph.cljs","^:",20,"^4;",["^Z",[["^4D"]]],"^4<",null,"^4=",["^Z",[null,null]],"^8",1,"^4>",false,"^7",19,"^4?",["^J",["~$js","^4@"]],"^9",19,"^4A",1,"^4B",true,"^48",["^Z",["^49",["^Z",[["^4D"]]]]]],"~$init",["^ ","^47",null,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",15,"^8",7,"^9",15,"^:",11,"^48",["^Z",["^49",["^Z",[["~$win","~$document"]]]]]],"^K","^1A","^6","re_frisk/subs_graph.cljs","^:",11,"^4;",["^Z",[["^4G","^4H"]]],"^4<",null,"^4=",["^Z",[null,null]],"^8",1,"^4>",false,"^7",15,"^4?",["^J",[null,"^42"]],"^9",15,"^4A",2,"^4B",true,"^48",["^Z",["^49",["^Z",[["^4G","^4H"]]]]]],"~$create",["^ ","^47",null,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",31,"^8",7,"^9",31,"^:",13,"^48",["^Z",["^49",["^Z",[[]]]]]],"^K","^1E","^6","re_frisk/subs_graph.cljs","^:",13,"^4;",["^Z",[[]]],"^4<",null,"^4=",["^Z",[null,null]],"^8",1,"^4>",false,"^7",31,"^4?",["^J",[null,"^42","^4@"]],"^9",31,"^4A",0,"^4B",true,"^48",["^Z",["^49",["^Z",[[]]]]]],"~$vis",["^ ","^K","^1M","^6","re_frisk/subs_graph.cljs","^7",5,"^8",1,"^9",5,"^:",13,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",5,"^8",10,"^9",5,"^:",13],"^3[","^40"],"~$destroy",["^ ","^47",null,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",26,"^8",7,"^9",26,"^:",14,"^48",["^Z",["^49",["^Z",[[]]]]]],"^K","^21","^6","re_frisk/subs_graph.cljs","^:",14,"^4;",["^Z",[[]]],"^4<",null,"^4=",["^Z",[null,null]],"^8",1,"^4>",false,"^7",26,"^4?",["^J",[null,"^42","^4@"]],"^9",26,"^4A",0,"^4B",true,"^48",["^Z",["^49",["^Z",[[]]]]]],"~$nodes",["^ ","^K","^1T","^6","re_frisk/subs_graph.cljs","^7",7,"^8",1,"^9",7,"^:",15,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",7,"^8",10,"^9",7,"^:",15],"^3[","^40"],"~$create-event-subs",["^ ","^47",null,"^5",["^ ","^6","re_frisk/subs_graph.cljs","^7",83,"^8",7,"^9",83,"^:",24,"^48",["^Z",["^49",["^Z",[[["^ ","~:keys",["~$app-db-reaction","~$subs"]]]]]]]],"^K","^1Y","^6","re_frisk/subs_graph.cljs","^:",24,"^4;",["^Z",[["~$p__56399"]]],"^4<",null,"^4=",["^Z",[null,null]],"^8",1,"^4>",false,"^7",83,"^4?",["^J",[null,"^42","^4@"]],"^9",83,"^4A",1,"^4B",true,"^48",["^Z",["^49",["^Z",[[["^ ","^4N",["^4O","^4P"]]]]]]]]],"^X",["^ ","^S","^S"],"~:cljs.analyzer/constants",["^ ","^U",["^J",["~:minVelocity","~:app-db-reaction","~:color","~:white","~:stabilization","~:yellow","~:value","~:operation","~:maxVelocity","~:background","~:font","~:physics","~:from","~:label","~:id","~:iterations","~:input-signals","~:subs","~:network","~:reaction","~:op-type","~:solver","~:to","~:data"]],"~:order",["^52","^5<","^4[","^4S","^4W","^56","^55","^54","^4U","^50","^4X","^5>","^59","^4T","^58","^5;","^5:","^57","^4Z","^51","^4V","^4Y","^53","^5="]],"^11",["^ ","^V",["^J",[]]],"^12",["^ "],"^13",["^T","^S","^Q"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^2:",[["^5B","~:static-fns"],true,["^5B","~:shadow-tweaks"],null,["^5B","~:source-map-inline"],null,["^5B","~:elide-asserts"],false,["^5B","~:optimize-constants"],null,["^5B","^18"],null,["^5B","~:external-config"],null,["^5B","~:tooling-config"],null,["^5B","~:emit-constants"],null,["^5B","~:load-tests"],null,["^5B","~:form-size-threshold"],null,["^5B","~:data-readers"],null,["^5B","~:infer-externs"],"~:auto",["^5B","^1:"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5B","~:fn-invoke-direct"],null,["^5B","~:source-map"],"/dev/null"]]]